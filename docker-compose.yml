services:
    mysql:
        image: mysql:8.0
        container_name: bee-fleet-mysql
        restart: always
        env_file:
            - .env
        environment:
            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
            MYSQL_DATABASE: ${MYSQL_DATABASE}
            MYSQL_USER: ${MYSQL_USER}
            MYSQL_PASSWORD: ${MYSQL_PASSWORD}
        ports:
            - "3406:3306"
        volumes:
            - mysql_data:/var/lib/mysql
        command: --default-authentication-plugin=mysql_native_password --innodb-flush-log-at-trx-commit=0
        networks:
            - project_network
        healthcheck:
            test:
                [
                    "CMD",
                    "mysqladmin",
                    "ping",
                    "-h",
                    "localhost",
                    "-u",
                    "root",
                    "-p$$MYSQL_ROOT_PASSWORD",
                ]
            interval: 5s
            timeout: 5s
            retries: 20

    phpmyadmin:
        image: phpmyadmin/phpmyadmin
        container_name: bee-fleet-phpmyadmin
        restart: always
        env_file:
            - .env
        environment:
            PMA_HOST: ${PMA_HOST}
            PMA_PORT: ${PMA_PORT}
            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
        ports:
            - "5003:5003"
        depends_on:
            mysql:
                condition: service_healthy
        networks:
            - project_network

    bee-fleet-datahub:
        build:
            dockerfile: Dockerfile
            context: ./backend/datahub
        env_file:
            - .env
        restart: always
        environment:
            DB_HOST: mysql
            DB_PORT: 3306
            DB_USER: ${MYSQL_USER}
            DB_PASSWORD: ${MYSQL_PASSWORD}
            DB_NAME: ${MYSQL_DATABASE}
            TZ: America/Sao_Paulo

        ports:
            - "5004:5004"
        volumes:
            - ./backend/datahub/uploads:/app/uploads
        depends_on:
            mysql:
                condition: service_healthy
        networks:
            - project_network
        command: sh -c "npx prisma generate && npx prisma migrate deploy && npm run dev"

    backend-bee-fleet-bot:
        build:
            context: ./backend/bot
            dockerfile: Dockerfile
        ports:
            - "5005:5005"
        volumes:
            - .:/app
        env_file:
            - .env
        environment:
            - PYTHONUNBUFFERED=1
        develop:
            watch:
                - action: sync
                  path: .
                  target: /app
                - action: rebuild
                  path: pyproject.toml

        depends_on:
            - mysql
        networks:
            - project_network
        restart: always

    bee_fleet_frontend:
        build:
            context: ./frontend
            dockerfile: Dockerfile
        environment:
            - NEXT_PUBLIC_API_URL=https://hublast.com/bee-fleet-datahub
            - NEXT_PUBLIC_CLIENT_API_URL=https://hublast.com/bee-fleet-datahub
        restart: always
        ports:
            - "5006:5006"
        env_file:
            - .env
        depends_on:
            - bee-fleet-datahub
        networks:
            - project_network

volumes:
    mysql_data:
        name: bee_fleet_mysql_data

networks:
    project_network:
        external: true
